* Multicolor LED properties

Bindings for multi color LEDs show how to describe current outputs of
either integrated multi-color LED elements (like RGB, RGBW, RGBWA-UV
etc.) or standalone LEDs, to achieve logically grouped multi-color LED
modules. This is achieved by adding multi-led nodes layer to the
monochrome LED bindings.

The nodes and properties defined in this document are unique to the multicolor
LED class.  Common LED nodes and properties are inherited from the common.txt
within this documentation directory.

Required LED Child properties:
	- color : For multicolor LED support this property should be defined as
		  LED_COLOR_ID_MULTI and further definition can be found in
		  include/linux/leds/common.h.

led-controller@30 {
	#address-cells = <1>;
	#size-cells = <0>;
	compatible = "ti,lp5024";
	reg = <0x29>;

	multi-led@1 {
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <1>;
		color = <LED_COLOR_ID_MULTI>;
		function = LED_FUNCTION_STATUS;


		led@3 {
			reg = <3>;
			color = <LED_COLOR_ID_RED>;
		};

		led@4 {
			reg = <4>;
			color = <LED_COLOR_ID_GREEN>;
		};

		led@5 {
			reg = <5>;
			color = <LED_COLOR_ID_BLUE>;
		};
	};

	multi-led@2 {
		#address-cells = <1>;
		#size-cells = <0>;
		color = <LED_COLOR_ID_MULTI>;
		function = LED_FUNCTION_ACTIVITY;
		reg = <2>;
		ti,led-bank = <2 3 5>;

		led@6 {
			reg = <0x6>;
			color = <LED_COLOR_ID_RED>;
			led-sources = <6 9 15>;
		};

		led@7 {
			reg = <0x7>;
			color = <LED_COLOR_ID_GREEN>;
			led-sources = <7 10 16>;
		};

		led@8 {
			reg = <0x8>;
			color = <LED_COLOR_ID_BLUE>;
			led-sources = <8 11 17>;
		};
	};

	multi-led@4 {
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <4>;
		color = <LED_COLOR_ID_MULTI>;
		function = LED_FUNCTION_ACTIVITY;

		led@12 {
			reg = <12>;
			color = <LED_COLOR_ID_RED>;
		};

		led@13 {
			reg = <13>;
			color = <LED_COLOR_ID_GREEN>;
		};

		led@14 {
			reg = <14>;
			color = <LED_COLOR_ID_BLUE>;
		};
	};

};
